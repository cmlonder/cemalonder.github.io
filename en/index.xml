<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cemal Önder</title>
    <link>http://cemalonder.com/en/</link>
    <description>Recent content on Cemal Önder</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 13 Jan 2020 07:14:38 +0300</lastBuildDate>
    
	<atom:link href="http://cemalonder.com/en/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Welcome Back Clean Code</title>
      <link>http://cemalonder.com/en/post/welcome-back-clean-code/</link>
      <pubDate>Mon, 13 Jan 2020 07:14:38 +0300</pubDate>
      
      <guid>http://cemalonder.com/en/post/welcome-back-clean-code/</guid>
      <description>I recently read an article from Dan Abramov who is the creator of Redux. Even if I agree his article point:
 Don’t be a clean code zealot. Clean code is not a goal. It’s an attempt to make some sense out of the immense complexity of systems we’re dealing with.
 I don&amp;rsquo;t agree how misleading his article title and how not descriptive his example. Because this kind of titles &amp;ldquo;Goodbye Clean Code&amp;rdquo; gives power to another kind of zealots who hates some Software Principles or hates someone around him mentioning this kind of principles.</description>
    </item>
    
    <item>
      <title>Cas Custom Authentication Principal JSON Problem</title>
      <link>http://cemalonder.com/en/post/cas-custom-authentication-principal-json-problem/</link>
      <pubDate>Fri, 13 Sep 2019 11:04:57 +0300</pubDate>
      
      <guid>http://cemalonder.com/en/post/cas-custom-authentication-principal-json-problem/</guid>
      <description>I would like to share my journey on returning attributes from custom authentication via using CAS. First of all we have 2 kind of endpoints to generate tickets, first one with using /tickets endpoint directly from an App, second one is using /login endpoint from browser. I had json problem in both of them:
Let&amp;rsquo;s look at my custom authentication handler&amp;rsquo;s overridden authenticateUsernamePasswordInternal function:
1 2  return createHandlerResult( credential, this.</description>
    </item>
    
    <item>
      <title>5 Layer and 5 Tier Architecture</title>
      <link>http://cemalonder.com/en/post/5-layer-and-5-tier-architecture/</link>
      <pubDate>Fri, 13 Sep 2019 08:37:57 +0300</pubDate>
      
      <guid>http://cemalonder.com/en/post/5-layer-and-5-tier-architecture/</guid>
      <description>There are differences between N-layer and N-tier definitions. We can start with explaining those first:
5-layer Architecture Layering is logical separation that you implement in your application. It has a relation with N-Tier but we will move onto it later:

Presentation This is how your application is shown to the user. You can think about it is a look and feel of the application. But it is very similar to the UI layer, today&amp;rsquo;s world with the improvement of JavaScript (client-side-rendering solutions like React, Angular, etc.</description>
    </item>
    
  </channel>
</rss>